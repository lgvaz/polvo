# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/20f_draw.pil_drawer.ipynb.

# %% auto 0
__all__ = ['PILDrawer']

# %% ../../nbs/20f_draw.pil_drawer.ipynb 3
from fastcore.all import *
import polvo as pv
import polvo.bbox as pb

# %% ../../nbs/20f_draw.pil_drawer.ipynb 4
class PILDrawer:
    # separating the drawing functions from its call allows us to pass custom arguments to each item
    def collect_draw_fns(self, record):
        return [item.draw(self) for item in record]
    
    def draw_fns(self, fns, image=None):
        for fn in fns: image = fn(image=image)
        return image
        
    def draw(self, record, image=None):
        fns = self.collect_draw_fns(record)
        return self.draw_fns(fns, image=image)

    def open_image(self, image_file): return lambda image, **kwargs: image_file.open(**kwargs) # swallow image argument
    def overlay_bbox(self, bbox): return partial(pb.overlay, bbox=bbox)
